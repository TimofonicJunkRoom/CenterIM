#!/bin/sh

#
# This script can be used to for chechking out and updating
# a program with anonymous r/o CVS access.
#
# by Konstantin Klyagin <konst@konst.org.ua>
#
# $Id: cicqsync,v 1.1 2001/10/25 19:29:17 konst Exp $
#

CVSROOT=:pserver:anonymous@cvs.konst.org.ua:/home/konst/cvs/root/

PROG="centericq"
MODULES="kktoolbox/kkstrtext kktoolbox/kksystr kktoolbox/kkconsui icqlib"
MAKEUPDATE="s/\/home\/konst\/devel\/kktoolbox/\$(top_srcdir)/g;s/\/home\/konst\/devel\/icqlib/\$(top_srcdir)\/icqlib/g"

RETVAL=0
CVS='cvs -z9 '

moduledir=""

preparedirs() {
    if test ! -d ${DEST}; then
	mkdir -p ${DEST};
    fi
}

getmoduledirname() {
    moduledir=`echo $1 | sed 's/^.\+\/\(.\+\)$/\1/g'`
}

progsync() {
    preparedirs
    codir=$PROG
    dir=$prefix

    for module in $PROG $MODULES
    do
	if test $module != $PROG; then
	    getmoduledirname $module
	    dir=$DEST/$moduledir
	    codir="orig"
	fi

	mkdir -p $dir

	if test -d $dir; then
	    cd $dir

	    if test $1 = "checkout"; then
		$CVS co -d $codir $module
	    else
		$CVS update -P -d
	    fi

	    RETVAL=$?
	    [ $RETVAL != 0 ] && return
	fi
    done
}

makelinks() {
    echo -n "Creating symbolic links for sources of libraries.. "

    for module in $MODULES
    do
	getmoduledirname $module
	dir=$DEST/$moduledir/orig

	if test -d $dir; then
	    cd $dir

	    for fn in `find $dir -name "*.h" -o -name "*.cc" -o -name "*.c" -o -name "*.cpp" -o -name "*.C" -o -name "Makefile.am" -o -name "configure.in"`
	    do
		srcfname=`echo $fn | sed 's/^.\+\/\(orig\/.\+\)$/\1/'`
		destdir=`dirname $fn | sed 's/\/orig//'`
		updirs=`echo $srcfname | sed 's/ /_/g;s/\// /g' | wc -w`

		for (( i = 0 ; i < $((updirs))-2 ; i++ )); do
		    srcfname="../"$srcfname
		done

		if test ! -d $destdir; then
		    mkdir -p $destdir
		fi

		if test ! -e $destdir/`basename $srcfname`; then
		    ln -sf $srcfname $destdir/
		fi
	    done
	fi
    done

    echo "ok"
}

updatemakepaths() {
    if test ! -z "$MAKEUPDATE"; then
	for fn in `find $DEST -name "Makefile.am"`
	do
	    sed $MAKEUPDATE $fn >.makefile.am
	    mv .makefile.am $fn
	done
    fi

    for m in $MODULES
    do
	getmoduledirname $m
	for fn in `find $DEST -name "configure.in"`
	do
	    smask="s/\<${moduledir}-[[:digit:].-]\+\>/${moduledir}/g"
	    sed $smask $fn >.configure.in
	    mv .configure.in $fn
	done
    done

    MSUBDIRS=`cat $DEST/Makefile.am | egrep "^SUBDIRS" | sed 's/SUBDIRS[ =]\+//g'`

    for m in $MODULES
    do
	getmoduledirname $m
	onlist=`echo $MSUBDIRS | grep $moduledir`
	if test -z "$onlist"; then
	    MSUBDIRS="$moduledir $MSUBDIRS"
	fi
    done

    echo "SUBDIRS = $MSUBDIRS" >.makefile.am
    egrep -v "^SUBDIRS" $DEST/Makefile.am >>.makefile.am
    mv .makefile.am $DEST/Makefile.am
}

runautomake() {
    for i in `find $DEST -name "configure.in"`
    do
	cd `dirname $i`

	aclocal
	if test -f acconfig.h; then autoheader; fi
	autoconf
	automake -a -c
    done

    cd $DEST
    if test ! -f intl/Makefile.in; then
        gettextize -c -f
        aclocal
    fi
}

usage() {
    echo "
This is a script which can checkout and update $PROG from an
anonymous CVS repository.

script usage:
    $0 {update|checkout} <pathname>
"
}

finishmsg() {
    echo "
CVS operations finished sucessfully.

To build the updated stuff go to the ${DEST} directory
and issue the following commands:

./configure
make
make install
"
}

if test $# -lt 2; then
    usage
else
    if test ! -d $2; then
	echo "the location you specified does not exist: $2"
	exit
    else
	cd $2
	prefix=`pwd`
	DEST=${prefix}/$PROG
    fi

    if test $1 = "checkout" -o $1 = "update"; then
	progsync $1
    else
	usage
	exit
    fi

    if test $RETVAL != 0; then
	echo "$0 aborted, exit code = $RETVAL"
    else
	updatemakepaths
	makelinks
	runautomake
	finishmsg
    fi
fi

exit $RETVAL
